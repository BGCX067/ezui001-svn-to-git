package cn.vstore.core.model.vo;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AccountExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table account
     *
     * @ibatorgenerated Tue Dec 13 18:13:54 CST 2011
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table account
     *
     * @ibatorgenerated Tue Dec 13 18:13:54 CST 2011
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account
     *
     * @ibatorgenerated Tue Dec 13 18:13:54 CST 2011
     */
    public AccountExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account
     *
     * @ibatorgenerated Tue Dec 13 18:13:54 CST 2011
     */
    protected AccountExample(AccountExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account
     *
     * @ibatorgenerated Tue Dec 13 18:13:54 CST 2011
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account
     *
     * @ibatorgenerated Tue Dec 13 18:13:54 CST 2011
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account
     *
     * @ibatorgenerated Tue Dec 13 18:13:54 CST 2011
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account
     *
     * @ibatorgenerated Tue Dec 13 18:13:54 CST 2011
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account
     *
     * @ibatorgenerated Tue Dec 13 18:13:54 CST 2011
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account
     *
     * @ibatorgenerated Tue Dec 13 18:13:54 CST 2011
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account
     *
     * @ibatorgenerated Tue Dec 13 18:13:54 CST 2011
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table account
     *
     * @ibatorgenerated Tue Dec 13 18:13:54 CST 2011
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andLoginIdIsNull() {
            addCriterion("login_id is null");
            return this;
        }

        public Criteria andLoginIdIsNotNull() {
            addCriterion("login_id is not null");
            return this;
        }

        public Criteria andLoginIdEqualTo(String value) {
            addCriterion("login_id =", value, "loginId");
            return this;
        }

        public Criteria andLoginIdNotEqualTo(String value) {
            addCriterion("login_id <>", value, "loginId");
            return this;
        }

        public Criteria andLoginIdGreaterThan(String value) {
            addCriterion("login_id >", value, "loginId");
            return this;
        }

        public Criteria andLoginIdGreaterThanOrEqualTo(String value) {
            addCriterion("login_id >=", value, "loginId");
            return this;
        }

        public Criteria andLoginIdLessThan(String value) {
            addCriterion("login_id <", value, "loginId");
            return this;
        }

        public Criteria andLoginIdLessThanOrEqualTo(String value) {
            addCriterion("login_id <=", value, "loginId");
            return this;
        }

        public Criteria andLoginIdLike(String value) {
            addCriterion("login_id like", value, "loginId");
            return this;
        }

        public Criteria andLoginIdNotLike(String value) {
            addCriterion("login_id not like", value, "loginId");
            return this;
        }

        public Criteria andLoginIdIn(List<String> values) {
            addCriterion("login_id in", values, "loginId");
            return this;
        }

        public Criteria andLoginIdNotIn(List<String> values) {
            addCriterion("login_id not in", values, "loginId");
            return this;
        }

        public Criteria andLoginIdBetween(String value1, String value2) {
            addCriterion("login_id between", value1, value2, "loginId");
            return this;
        }

        public Criteria andLoginIdNotBetween(String value1, String value2) {
            addCriterion("login_id not between", value1, value2, "loginId");
            return this;
        }

        public Criteria andPasswdIsNull() {
            addCriterion("passwd is null");
            return this;
        }

        public Criteria andPasswdIsNotNull() {
            addCriterion("passwd is not null");
            return this;
        }

        public Criteria andPasswdEqualTo(String value) {
            addCriterion("passwd =", value, "passwd");
            return this;
        }

        public Criteria andPasswdNotEqualTo(String value) {
            addCriterion("passwd <>", value, "passwd");
            return this;
        }

        public Criteria andPasswdGreaterThan(String value) {
            addCriterion("passwd >", value, "passwd");
            return this;
        }

        public Criteria andPasswdGreaterThanOrEqualTo(String value) {
            addCriterion("passwd >=", value, "passwd");
            return this;
        }

        public Criteria andPasswdLessThan(String value) {
            addCriterion("passwd <", value, "passwd");
            return this;
        }

        public Criteria andPasswdLessThanOrEqualTo(String value) {
            addCriterion("passwd <=", value, "passwd");
            return this;
        }

        public Criteria andPasswdLike(String value) {
            addCriterion("passwd like", value, "passwd");
            return this;
        }

        public Criteria andPasswdNotLike(String value) {
            addCriterion("passwd not like", value, "passwd");
            return this;
        }

        public Criteria andPasswdIn(List<String> values) {
            addCriterion("passwd in", values, "passwd");
            return this;
        }

        public Criteria andPasswdNotIn(List<String> values) {
            addCriterion("passwd not in", values, "passwd");
            return this;
        }

        public Criteria andPasswdBetween(String value1, String value2) {
            addCriterion("passwd between", value1, value2, "passwd");
            return this;
        }

        public Criteria andPasswdNotBetween(String value1, String value2) {
            addCriterion("passwd not between", value1, value2, "passwd");
            return this;
        }

        public Criteria andNicknameIsNull() {
            addCriterion("nickname is null");
            return this;
        }

        public Criteria andNicknameIsNotNull() {
            addCriterion("nickname is not null");
            return this;
        }

        public Criteria andNicknameEqualTo(String value) {
            addCriterion("nickname =", value, "nickname");
            return this;
        }

        public Criteria andNicknameNotEqualTo(String value) {
            addCriterion("nickname <>", value, "nickname");
            return this;
        }

        public Criteria andNicknameGreaterThan(String value) {
            addCriterion("nickname >", value, "nickname");
            return this;
        }

        public Criteria andNicknameGreaterThanOrEqualTo(String value) {
            addCriterion("nickname >=", value, "nickname");
            return this;
        }

        public Criteria andNicknameLessThan(String value) {
            addCriterion("nickname <", value, "nickname");
            return this;
        }

        public Criteria andNicknameLessThanOrEqualTo(String value) {
            addCriterion("nickname <=", value, "nickname");
            return this;
        }

        public Criteria andNicknameLike(String value) {
            addCriterion("nickname like", value, "nickname");
            return this;
        }

        public Criteria andNicknameNotLike(String value) {
            addCriterion("nickname not like", value, "nickname");
            return this;
        }

        public Criteria andNicknameIn(List<String> values) {
            addCriterion("nickname in", values, "nickname");
            return this;
        }

        public Criteria andNicknameNotIn(List<String> values) {
            addCriterion("nickname not in", values, "nickname");
            return this;
        }

        public Criteria andNicknameBetween(String value1, String value2) {
            addCriterion("nickname between", value1, value2, "nickname");
            return this;
        }

        public Criteria andNicknameNotBetween(String value1, String value2) {
            addCriterion("nickname not between", value1, value2, "nickname");
            return this;
        }

        public Criteria andProsumerIdIsNull() {
            addCriterion("prosumer_id is null");
            return this;
        }

        public Criteria andProsumerIdIsNotNull() {
            addCriterion("prosumer_id is not null");
            return this;
        }

        public Criteria andProsumerIdEqualTo(Long value) {
            addCriterion("prosumer_id =", value, "prosumerId");
            return this;
        }

        public Criteria andProsumerIdNotEqualTo(Long value) {
            addCriterion("prosumer_id <>", value, "prosumerId");
            return this;
        }

        public Criteria andProsumerIdGreaterThan(Long value) {
            addCriterion("prosumer_id >", value, "prosumerId");
            return this;
        }

        public Criteria andProsumerIdGreaterThanOrEqualTo(Long value) {
            addCriterion("prosumer_id >=", value, "prosumerId");
            return this;
        }

        public Criteria andProsumerIdLessThan(Long value) {
            addCriterion("prosumer_id <", value, "prosumerId");
            return this;
        }

        public Criteria andProsumerIdLessThanOrEqualTo(Long value) {
            addCriterion("prosumer_id <=", value, "prosumerId");
            return this;
        }

        public Criteria andProsumerIdIn(List<Long> values) {
            addCriterion("prosumer_id in", values, "prosumerId");
            return this;
        }

        public Criteria andProsumerIdNotIn(List<Long> values) {
            addCriterion("prosumer_id not in", values, "prosumerId");
            return this;
        }

        public Criteria andProsumerIdBetween(Long value1, Long value2) {
            addCriterion("prosumer_id between", value1, value2, "prosumerId");
            return this;
        }

        public Criteria andProsumerIdNotBetween(Long value1, Long value2) {
            addCriterion("prosumer_id not between", value1, value2, "prosumerId");
            return this;
        }

        public Criteria andCpIdIsNull() {
            addCriterion("cp_id is null");
            return this;
        }

        public Criteria andCpIdIsNotNull() {
            addCriterion("cp_id is not null");
            return this;
        }

        public Criteria andCpIdEqualTo(Long value) {
            addCriterion("cp_id =", value, "cpId");
            return this;
        }

        public Criteria andCpIdNotEqualTo(Long value) {
            addCriterion("cp_id <>", value, "cpId");
            return this;
        }

        public Criteria andCpIdGreaterThan(Long value) {
            addCriterion("cp_id >", value, "cpId");
            return this;
        }

        public Criteria andCpIdGreaterThanOrEqualTo(Long value) {
            addCriterion("cp_id >=", value, "cpId");
            return this;
        }

        public Criteria andCpIdLessThan(Long value) {
            addCriterion("cp_id <", value, "cpId");
            return this;
        }

        public Criteria andCpIdLessThanOrEqualTo(Long value) {
            addCriterion("cp_id <=", value, "cpId");
            return this;
        }

        public Criteria andCpIdIn(List<Long> values) {
            addCriterion("cp_id in", values, "cpId");
            return this;
        }

        public Criteria andCpIdNotIn(List<Long> values) {
            addCriterion("cp_id not in", values, "cpId");
            return this;
        }

        public Criteria andCpIdBetween(Long value1, Long value2) {
            addCriterion("cp_id between", value1, value2, "cpId");
            return this;
        }

        public Criteria andCpIdNotBetween(Long value1, Long value2) {
            addCriterion("cp_id not between", value1, value2, "cpId");
            return this;
        }
    }
}